[1mdiff --git a/app.py b/app.py[m
[1mindex afb352f..90ce615 100644[m
[1m--- a/app.py[m
[1m+++ b/app.py[m
[36m@@ -17,16 +17,25 @@[m [mdef signal_handler(signum, frame):[m
 def main():[m
     """Main function to launch the resume bot"""[m
     [m
[31m-    # Check for required environment variable (important for HF deployment)[m
[31m-    if not os.getenv("OPENAI_API_KEY"):[m
[31m-        print("‚ùå ERROR: OPENAI_API_KEY environment variable not set!")[m
[31m-        print("Please set your OpenAI API key.")[m
[31m-        return[m
[31m-    [m
     print("üöÄ Starting Brandon-Bot...")[m
     [m
[31m-    # Create the Gradio interface[m
[31m-    demo = create_interface()[m
[32m+[m[32m    # Check if imports were successful[m
[32m+[m[32m    if not IMPORT_SUCCESS:[m
[32m+[m[32m        print(f"‚ùå Failed to import bot components: {IMPORT_ERROR}")[m
[32m+[m[32m        demo = create_error_interface(IMPORT_ERROR)[m
[32m+[m[32m    else:[m
[32m+[m[32m        # Check for required environment variable (important for HF deployment)[m
[32m+[m[32m        if not os.getenv("OPENAI_API_KEY"):[m
[32m+[m[32m            print("‚ö†Ô∏è  WARNING: OPENAI_API_KEY environment variable not set!")[m
[32m+[m[32m            print("The bot will show an error message to users.")[m
[32m+[m[41m        [m
[32m+[m[32m        # Create the Gradio interface (even without API key to show error)[m
[32m+[m[32m        try:[m
[32m+[m[32m            demo = create_interface()[m
[32m+[m[32m        except Exception as e:[m
[32m+[m[32m            print(f"‚ùå Error creating interface: {e}")[m
[32m+[m[32m            traceback.print_exc()[m
[32m+[m[32m            demo = create_error_interface(f"Interface creation failed: {e}")[m
     [m
     # Detect if running on Hugging Face or locally[m
     is_huggingface = os.getenv("SPACE_ID") is not None[m
